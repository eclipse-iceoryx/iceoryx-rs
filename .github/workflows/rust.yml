name: Build & Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  pre-flight-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt
        override: true
    - name: Check formatting
      run:  cargo fmt --check

  build-test:
    runs-on: ${{ matrix.os }}
    needs: pre-flight-check
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest] #Todo add windows-latest
        toolchain: [stable, nightly]

    steps:
    - uses: actions/checkout@v3
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        components: clippy
        override: true
    - name: Setup cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: cache-${{ runner.os }}-toolchain-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/build.rs') }}
    - if: startsWith(matrix.os, 'ubuntu-latest') == true
      name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y libacl1-dev libncurses5-dev
    - name: Build
      run: cargo build --all --examples
    - if: startsWith(matrix.os, 'ubuntu-latest') == true && startsWith(matrix.toolchain, 'stable') == true
      name: Run clippy # clippy can reuse the previous build artifacts
      run: cargo clippy
    - name: Run tests
      run: cargo test -- --test-threads=1 # prevent running multiple RouDiEnvironments in parallel

  coverage:
    runs-on: ubuntu-latest
    needs: pre-flight-check
    steps:
    - uses: actions/checkout@v3
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: llvm-tools-preview
        override: true
    - name: Setup cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: coverage-llvm-tools-preview-cache-${{ runner.os }}-toolchain-nightly-${{ hashFiles('**/Cargo.toml') }}-${{ hashFiles('**/build.rs') }}
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y libacl1-dev libncurses5-dev
        grcov --version > /dev/null || cargo install grcov
    - name: Build
      env:
        RUSTFLAGS: -Cinstrument-coverage
      run: cargo build
    - name: Run test
      env:
        LLVM_PROFILE_FILE: iceoryx-rs-%p-%m.profraw
        RUSTFLAGS: -Cinstrument-coverage
      run: cargo test -- --test-threads=1 # prevent running multiple RouDiEnvironments in parallel
    - name: Generate coverage
      run: |
        grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing -o ./lcov.info
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./lcov.info
        fail_ci_if_error: true
